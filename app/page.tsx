"use client";

import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { VideoIcon, FileText, Link2 } from "lucide-react";
import { Textarea } from "@/components/ui/textarea";

export default function Home() {
  const [url, setUrl] = useState("");
  const [loading, setLoading] = useState(false);
  const [summary, setSummary] = useState("");

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    
    // TODO: Implement actual video summarization API call
    // For now, we'll simulate a delay
    setTimeout(() => {
      setSummary("This is a sample summary of the video content. In a real implementation, this would be generated by processing the video content through an AI model.");
      setLoading(false);
    }, 2000);
  };

  return (
    <main className="min-h-screen bg-gradient-to-b from-background to-muted">
      <div className="container mx-auto px-4 py-16">
        <div className="max-w-3xl mx-auto space-y-8">
          {/* Header */}
          <div className="text-center space-y-4">
            <div className="flex justify-center">
              <VideoIcon className="h-16 w-16 text-primary" />
            </div>
            <h1 className="text-4xl font-bold tracking-tight">Video Summarizer</h1>
            <p className="text-muted-foreground text-lg">
              Get instant summaries of any video content by simply pasting the URL
            </p>
          </div>

          {/* Input Form */}
          <Card className="p-6">
            <form onSubmit={handleSubmit} className="space-y-4">
              <div className="flex gap-2">
                <div className="relative flex-1">
                  <Link2 className="absolute left-3 top-3 h-5 w-5 text-muted-foreground" />
                  <Input
                    type="url"
                    placeholder="Paste your video URL here..."
                    className="pl-10"
                    value={url}
                    onChange={(e) => setUrl(e.target.value)}
                    required
                  />
                </div>
                <Button type="submit" disabled={loading}>
                  {loading ? (
                    <div className="flex items-center gap-2">
                      <div className="h-4 w-4 animate-spin rounded-full border-2 border-primary border-t-transparent" />
                      Processing
                    </div>
                  ) : (
                    "Summarize"
                  )}
                </Button>
              </div>
            </form>
          </Card>

          {/* Summary Output */}
          {summary && (
            <Card className="p-6 space-y-4">
              <div className="flex items-center gap-2">
                <FileText className="h-5 w-5 text-primary" />
                <h2 className="text-xl font-semibold">Summary</h2>
              </div>
              <Textarea
                value={summary}
                readOnly
                className="min-h-[200px] resize-none"
              />
            </Card>
          )}

          {/* Features */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {[
              {
                icon: <VideoIcon className="h-6 w-6" />,
                title: "Multiple Platforms",
                description: "Supports videos from YouTube, Vimeo, and more",
              },
              {
                icon: <FileText className="h-6 w-6" />,
                title: "AI-Powered",
                description: "Advanced AI models for accurate summarization",
              },
              {
                icon: <Link2 className="h-6 w-6" />,
                title: "Simple to Use",
                description: "Just paste the URL and get your summary",
              },
            ].map((feature, index) => (
              <Card key={index} className="p-6 text-center space-y-2">
                <div className="flex justify-center text-primary">{feature.icon}</div>
                <h3 className="font-semibold">{feature.title}</h3>
                <p className="text-sm text-muted-foreground">{feature.description}</p>
              </Card>
            ))}
          </div>
        </div>
      </div>
    </main>
  );
}